package GraphAlgos;

import java.util.LinkedList;
import java.util.Queue;

public class Graph {
	private int V;
	private LinkedList<Integer>[] adj;
	public Graph(int numberOfVertex) {
		this.V = numberOfVertex;
		adj = new LinkedList[numberOfVertex];
		for(int i =0;i<numberOfVertex;i++)
		{
			adj[i] = new LinkedList<Integer>();
		}
	}
	void addEdge(int v,int w)
    {
        adj[v].add(w);
    }
	void printBFS(int source)
	{
		boolean[] visited = new boolean[V];
		Queue<Integer> q = new LinkedList<Integer>();
		visited[source]=true;
        q.add(source);
        while(q.isEmpty())
        {
        	int s = q.poll();
        	if(!visited[s])
        	{
        		System.out.print(s+ " ");
        		for (Integer integer : adj[s]) {
        			if (!visited[n])
                    {
                        visited[n] = true;
                        queue.add(n);
                    }
				}
        	}
        }
	}
}
