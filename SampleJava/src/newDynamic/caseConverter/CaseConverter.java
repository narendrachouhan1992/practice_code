package newDynamic.caseConverter;

import javax.swing.plaf.synth.SynthStyle;

public class CaseConverter {
	static String convertCase(String str)
	{
		String[] str1 = str.split("-");
		String answer = "";
		for (String s : str1) {
			answer += Character.toUpperCase(s.charAt(0)) + s.substring(1);
		}
		return answer;
	}
	public static void main(String[] args) {
		System.out.println(convertCase("find-number-times-string-occurs-given-string"));
		System.out.println(convertCase("count-groupings-number-sum-digits-every-sub-group-less-equals-immediate-right-sub-group"));
		System.out.println(convertCase("non-crossing-lines-connect-points-circle"));
		System.out.println(convertCase("count-distinct-subsequences"));
		System.out.println(convertCase("find-minimum-sum-one-every-three-consecutive-elements-taken"));
		System.out.println(convertCase("count-distinct-occurrences-as-a-subsequence"));
		System.out.println(convertCase("number-of-permutation-with-k-inversions"));
		System.out.println(convertCase("print-longest-common-sub-sequences-lexicographical-order"));
		System.out.println(convertCase("find-distinct-subset-subsequence-sums-array"));
		System.out.println(convertCase("count-palindromic-subsequence-given-string"));
		System.out.println(convertCase("maximum-sum-alternating-subsequence-sum"));
		System.out.println(convertCase("sum-average-subsets"));
		System.out.println(convertCase("minimum-maximum-values-expression"));
		System.out.println(convertCase("minimum-sum-subsequence-least-one-every-four-consecutive-elements-picked"));
		System.out.println(convertCase("ways-to-write-n-as-sum-of-two-or-more-positive-integers"));
		System.out.println(convertCase("unbounded-knapsack-repetition-items-allowed"));
		System.out.println(convertCase("finding-the-maximum-square-sub-matrix-with-all-equal-elements"));
		System.out.println(convertCase("maximum-points-collected-by-two-persons-allowed-to-meet-once"));
		System.out.println(convertCase("count-binary-strings-k-times-appearing-adjacent-two-set-bits"));
		System.out.println(convertCase("highway-billboard-problem"));
		System.out.println(convertCase("probability-getting-least-k-heads-n-tosses-coins"));
		System.out.println(convertCase("count-strings-can-formed-using-b-c-given-constraints"));
		System.out.println(convertCase("modify-array-to-maximize-sum-of-adjacent-differences"));
		System.out.println(convertCase("temple-offerings"));
		System.out.println(convertCase("minimum-steps-to-delete-a-string-after-repeated-deletion-of-palindrome-substrings"));
		System.out.println(convertCase("minimum-number-of-jumps-to-reach-end-of-a-given-array"));
		System.out.println(convertCase("count-number-ways-jump-reach-end"));
		System.out.println(convertCase("shortest-uncommon-subsequence"));
		System.out.println(convertCase("dynamic-programming-set-23-bellman-ford-algorithm"));
		System.out.println(convertCase("dynamic-programming-set-24-optimal-binary-search-tree"));
		System.out.println(convertCase("largest-independent-set-problem"));
		System.out.println(convertCase("maximum-decimal-value-path-in-a-binary-matrix"));
		System.out.println(convertCase("dice-throw-problem"));
		System.out.println(convertCase("dynamic-programming-set-31-optimal-strategy-for-a-game"));
		System.out.println(convertCase("maximum-profit-by-buying-and-selling-a-share-at-most-twice"));
		System.out.println(convertCase("design-and-implement-special-stack-data-structure"));
		System.out.println(convertCase("print-binary-tree-vertical-order"));
		System.out.println(convertCase("swap-kth-node-from-beginning-with-kth-node-from-end-in-a-linked-list"));
		System.out.println(convertCase("binary-tree-to-binary-search-tree-conversion"));
		System.out.println(convertCase("maximum-sum-iarri-among-rotations-given-array"));
		System.out.println(convertCase("count-number-of-occurrences-or-frequency-in-a-sorted-array"));
		System.out.println(convertCase("find-the-smallest-window-in-a-string-containing-all-characters-of-another-string"));
		System.out.println(convertCase("sliding-window-maximum-maximum-of-all-subarrays-of-size-k"));
		System.out.println(convertCase("count-total-set-bits-in-all-numbers-from-1-to-n"));
		System.out.println(convertCase("replace-every-element-with-the-greatest-on-right-side"));
		System.out.println(convertCase("number-subsequences-form-ai-bj-ck"));
		System.out.println(convertCase("highest-power-2-less-equal-given-number"));
		System.out.println(convertCase("print-all-possible-paths-from-top-left-to-bottom-right-of-a-mxn-matrix"));
		System.out.println(convertCase("return-a-pair-with-maximum-product-in-array-of-integers"));
		System.out.println(convertCase("write-a-c-program-to-find-the-maximum-depth-or-height-of-a-tree"));
		System.out.println(convertCase("print-nodes-at-k-distance-from-root"));
		System.out.println(convertCase("difference-between-sums-of-odd-and-even-levels"));
		System.out.println(convertCase("construct-a-special-tree-from-given-preorder-traversal"));
		System.out.println(convertCase("tree-isomorphism-problem"));
		System.out.println(convertCase("replace-0-5-input-integer"));
		System.out.println(convertCase("check-given-four-points-form-square"));
		System.out.println(convertCase("find-the-nearest-smaller-numbers-on-left-side-in-an-array"));
		System.out.println(convertCase("check-if-two-given-line-segments-intersect"));
		System.out.println(convertCase("how-to-check-if-a-given-point-lies-inside-a-polygon"));
		System.out.println(convertCase("find-two-rectangles-overlap"));
		System.out.println(convertCase("pair-with-given-product-set-1-find-if-any-pair-exists"));
		System.out.println(convertCase("position-of-rightmost-set-bit"));
		System.out.println(convertCase("print-possible-strings-can-made-placing-spaces"));
		System.out.println(convertCase("a-boolean-matrix-question"));
		System.out.println(convertCase("build-lowest-number-by-removing-n-digits-from-a-given-number"));
		System.out.println(convertCase("check-if-a-given-binary-tree-is-sumtree"));
		System.out.println(convertCase("check-if-a-number-can-be-expressed-as-xy-x-raised-to-power-y"));
		System.out.println(convertCase("check-if-two-trees-are-mirror"));
		System.out.println(convertCase("count-possible-groups-size-2-3-sum-multiple-3"));
		System.out.println(convertCase("count-triplets-with-sum-smaller-that-a-given-value"));
		System.out.println(convertCase("equilibrium-index-of-an-array"));
		System.out.println(convertCase("fill-array-1s-minimum-iterations-filling-neighbors"));
		System.out.println(convertCase("find-four-numbers-with-sum-equal-to-given-sum"));
		System.out.println(convertCase("sieve-of-eratosthenes"));
		System.out.println(convertCase("find-two-prime-numbers-with-given-sum"));
		System.out.println(convertCase("k-largestor-smallest-elements-in-an-array"));
		System.out.println(convertCase("level-order-tree-traversal"));
		System.out.println(convertCase("maximum-sum-such-that-no-two-elements-are-adjacent"));
		System.out.println(convertCase("mobile-numeric-keypad-problem"));
		System.out.println(convertCase("mobile-numeric-keypad-problem-dynamic"));
		System.out.println(convertCase("write-a-c-program-to-print-all-permutations-of-a-given-string"));
		System.out.println(convertCase("a-product-array-puzzle"));
		System.out.println(convertCase("backtracking-set-1-the-knights-tour-problem"));
		System.out.println(convertCase("boundary-traversal-of-binary-tree"));
		System.out.println(convertCase("check-for-balanced-parentheses-in-an-expression"));
		System.out.println(convertCase("check-given-array-contains-duplicate-elements-within-k-distance"));
		System.out.println(convertCase("connect-leaves-doubly-linked-list"));
		System.out.println(convertCase("convert-a-given-tree-to-sum-tree"));
		System.out.println(convertCase("count-number-of-ways-to-cover-a-distance"));
		System.out.println(convertCase("count-numbers-first-last-digits"));
		System.out.println(convertCase("counting-inversions"));
		System.out.println(convertCase("design-and-implement-special-stack-data-structure"));
		System.out.println(convertCase("diameter-of-a-binary-tree"));
		System.out.println(convertCase("palindrome-partitioning"));
		System.out.println(convertCase("evaluation-of-expression-tree"));
		System.out.println(convertCase("extract-maximum-numeric-value-given-string"));
		System.out.println(convertCase("find-a-sorted-subsequence-of-size-3-in-linear-time"));
		System.out.println(convertCase("find-all-strings-that-match-specific-pattern-in-a-dictionary"));
		System.out.println(convertCase("find-excel-column-name-given-number"));
		System.out.println(convertCase("find-four-elements-a-b-c-and-d-in-an-array-such-that-ab-cd"));
		System.out.println(convertCase("find-level-maximum-sum-binary-tree"));
		System.out.println(convertCase("find-minimum-number-of-coins-that-make-a-change"));
		System.out.println(convertCase("find-next-greater-number-set-digits"));
		System.out.println(convertCase("find-nth-magic-number"));
		System.out.println(convertCase("find-possible-words-phone-digits"));
		System.out.println(convertCase("find-pythagorean-triplet-in-an-unsorted-array"));
		System.out.println(convertCase("find-subarray-with-given-sum"));
		System.out.println(convertCase("find-the-element-before-which-all-the-elements-are-smaller-than-it-and-after-which-all-are-greater-than-it"));
		System.out.println(convertCase("find-the-element-that-appears-once"));
		System.out.println(convertCase("find-the-largest-subarray-with-0-sum"));
		System.out.println(convertCase("find-the-maximum-repeating-number-in-ok-time"));
		System.out.println(convertCase("find-the-row-with-maximum-number-1s"));
		System.out.println(convertCase("find-the-smallest-window-in-a-string-containing-all-characters-of-another-string"));
		System.out.println(convertCase("find-two-non-repeating-elements-in-an-array-of-repeating-elements"));
		System.out.println(convertCase("find-zeroes-to-be-flipped-so-that-number-of-consecutive-1s-is-maximized"));
		System.out.println(convertCase("reverse-a-linked-list-interative"));
		System.out.println(convertCase("given-a-number-find-next-sparse-number"));
		System.out.println(convertCase("given-a-string-find-its-first-non-repeating-character"));
		System.out.println(convertCase("how-to-sort-a-linked-list-that-is-sorted-alternating-ascending-and-descending-orders"));
		System.out.println(convertCase("implement-stack-using-queue"));
		System.out.println(convertCase("largest-subarray-with-equal-number-of-0s-and-1s"));
		System.out.println(convertCase("length-of-the-longest-substring-without-repeating-characters"));
		System.out.println(convertCase("longest-consecutive-sequence-binary-tree"));
		System.out.println(convertCase("look-and-say-sequence"));
		System.out.println(convertCase("lowest-common-ancestor-binary-tree-set-1"));
		System.out.println(convertCase("majority-element"));
		System.out.println(convertCase("maximize-number-0s-flipping-subarray"));
		System.out.println(convertCase("maximum-product-subarray"));
		System.out.println(convertCase("maximum-sum-lengths-non-overlapping-subarrays-k-max-element"));
		System.out.println(convertCase("maximum-sum-path-across-two-arrays"));
		System.out.println(convertCase("median-of-two-sorted-arrays"));
		System.out.println(convertCase("merge-two-sorted-linked-lists"));
		System.out.println(convertCase("minimum-sum-squares-characters-counts-given-string-removing-k-characters"));
		System.out.println(convertCase("minimum-time-required-so-that-all-oranges-become-rotten"));
		System.out.println(convertCase("next-greater-element"));
		System.out.println(convertCase("number-of-paths-with-exactly-k-coins"));
		System.out.println(convertCase("print-all-jumping-numbers-smaller-than-or-equal-to-a-given-value"));
		System.out.println(convertCase("print-binary-tree-vertical-order"));
		System.out.println(convertCase("print-common-nodes-in-two-binary-search-trees"));
		System.out.println(convertCase("print-left-view-binary-tree"));
		System.out.println(convertCase("print-unique-rows"));
		System.out.println(convertCase("rearrange-characters-string-no-two-adjacent"));
		System.out.println(convertCase("reverse-level-order-traversal"));
		System.out.println(convertCase("search-an-element-in-a-sorted-and-pivoted-array"));
		System.out.println(convertCase("sliding-window-maximum-maximum-of-all-subarrays-of-size-k"));
		System.out.println(convertCase("sort-a-stack-using-recursion"));
		System.out.println(convertCase("stock-buy-sell"));
		System.out.println(convertCase("submatrix-sum-queries"));
		System.out.println(convertCase("trapping-rain-water"));
		System.out.println(convertCase("add-greater-values-every-node-given-bst"));
		System.out.println(convertCase("hamiltonian-cycle"));
		System.out.println(convertCase("Solve-Sudoku"));
		System.out.println(convertCase("bottom-view-binary-tree"));
		System.out.println(convertCase("clone-binary-tree-random-pointers"));
		System.out.println(convertCase("connect-n-ropes-minimum-cost"));
		System.out.println(convertCase("connect-nodes-at-same-level"));
		System.out.println(convertCase("construct-a-binary-tree-from-parent-array-representation"));
		System.out.println(convertCase("delete-occurrences-given-key-linked-list"));
		System.out.println(convertCase("diagonal-traversal-of-binary-tree"));
		System.out.println(convertCase("dynamic-programming-set-5-edit-distance"));
		System.out.println(convertCase("find-a-pair-with-given-sum-in-bst"));
		System.out.println(convertCase("in-place-convert-a-given-binary-tree-to-doubly-linked-list"));
		System.out.println(convertCase("find-a-tour-that-visits-all-stations"));
		System.out.println(convertCase("find-distance-between-two-nodes-of-a-binary-tree"));
		System.out.println(convertCase("find-first-non-repeating-character-stream-characters"));
		System.out.println(convertCase("find-length-largest-region-boolean-matrix"));
		System.out.println(convertCase("find-smallest-range-containing-elements-from-k-lists"));
		System.out.println(convertCase("find-water-in-a-glass"));
		System.out.println(convertCase("flattening-a-linked-list"));
		System.out.println(convertCase("form-minimum-number-from-given-sequence"));
		System.out.println(convertCase("given-a-number-find-next-smallest-palindrome-larger-than-this-number"));
		System.out.println(convertCase("greedy-algorithms-set-3-huffman-coding"));
		System.out.println(convertCase("greedy-algorithms-set-5-prims-minimum-spanning-tree-mst-2"));
		System.out.println(convertCase("how-to-print-maximum-number-of-a-using-given-four-keys"));
		System.out.println(convertCase("inorder-successor-in-binary-search-tree"));
		System.out.println(convertCase("largest-rectangle-under-histogram"));
		System.out.println(convertCase("longest-consecutive-subsequence"));
		System.out.println(convertCase("merge-k-sorted-linked-lists"));
		System.out.println(convertCase("merge-two-bsts-with-limited-extra-space"));
		System.out.println(convertCase("merging-intervals"));
		System.out.println(convertCase("minimum-number-of-jumps-to-reach-end-of-a-given-array"));
		System.out.println(convertCase("minimum-number-platforms-required-railwaybus-station"));
		System.out.println(convertCase("minimum-steps-to-reach-a-destination"));
		System.out.println(convertCase("nuts-bolts-problem-lock-key-problem"));
		System.out.println(convertCase("print-extreme-nodes-of-each-level-of-binary-tree-in-alternate-order"));
		System.out.println(convertCase("print-nodes-top-view-binary-tree"));
		System.out.println(convertCase("remove-minimum-elements-either-side-2min-max"));
		System.out.println(convertCase("smallest-window-contains-characters-string"));
		System.out.println(convertCase("snake-ladder-problem-2"));
		System.out.println(convertCase("backtracking-set-3-n-queen-problem"));
		System.out.println(convertCase("construct-tree-from-given-inorder-and-preorder-traversal"));
		System.out.println(convertCase("dynamic-programming-set-37-boolean-parenthesization-problem"));
		System.out.println(convertCase("fix-two-swapped-nodes-of-bst"));
		System.out.println(convertCase("given-an-array-of-numbers-arrange-the-numbers-to-form-the-biggest-number"));
		System.out.println(convertCase("thread-pool-implementation"));
		System.out.println(convertCase("binary-representation-of-a-given-number"));
		System.out.println(convertCase("converting-decimal-number-lying-between-1-to-3999-to-roman-numerals"));
		System.out.println(convertCase("print-string-ignoring-alternate-occurrences-character"));
		System.out.println(convertCase("factorial-large-number"));
		System.out.println(convertCase("print-nodes-distance-k-leaf-node"));
		System.out.println(convertCase("given-a-string-find-its-first-non-repeating-character"));
		System.out.println(convertCase("count-set-bits-in-an-integer"));
		System.out.println(convertCase("find-longest-increasing-subsequence-circular-manner"));
		System.out.println(convertCase("generate-all-binary-strings-from-given-pattern"));
		System.out.println(convertCase("find-largest-word-dictionary-deleting-characters-given-string"));
		System.out.println(convertCase("find-the-longest-substring-with-k-unique-characters-in-a-given-string"));
		System.out.println(convertCase("check-binary-tree-contains-duplicate-subtrees-size-2"));
		System.out.println(convertCase("flood-fill-algorithm-implement-fill-paint"));
		System.out.println(convertCase("given-matrix-o-x-replace-o-x-surrounded-x"));
		System.out.println(convertCase("paper-cut-minimum-number-squares-set-2"));
		System.out.println(convertCase("find-the-largest-subtree-in-a-tree-that-is-also-a-bst"));
		System.out.println(convertCase("given-matrix-o-x-find-largest-subsquare-surrounded-x"));
		System.out.println(convertCase("combinational-sum"));
		System.out.println(convertCase("find-given-string-can-represented-substring-iterating-substring-n-times"));
		System.out.println(convertCase("dynamic-programming-set-7-coin-change"));
		System.out.println(convertCase("friends-pairing-problem"));
		System.out.println(convertCase("largest-divisible-pairs-subset"));
		System.out.println(convertCase("perfect-sum-problem-print-subsets-given-sum"));
		System.out.println(convertCase("game-theory-choice-area"));
		System.out.println(convertCase("count-even-length-binary-sequences-with-same-sum-of-first-and-second-half-bits"));
		System.out.println(convertCase("sequences-given-length-every-element-equal-twice-previous"));
		System.out.println(convertCase("count-subsequences-product-less-k"));
		System.out.println(convertCase("how-to-design-a-tiny-url-or-url-shortener"));
		System.out.println(convertCase("backttracking-set-2-rat-in-a-maze"));
		System.out.println(convertCase("connect-nodes-at-same-level-with-o1-extra-space"));
		System.out.println(convertCase("boggle-set-2-using-trie"));
		System.out.println(convertCase("minimize-cash-flow-among-given-set-friends-borrowed-money"));
		System.out.println(convertCase("segment-tree-set-1-range-minimum-query"));
		System.out.println(convertCase("minimum-steps-reach-target-knight"));
		System.out.println(convertCase("find-maximum-number-possible-by-doing-at-most-k-swaps"));
		System.out.println(convertCase("subarray-whose-sum-is-closest-to-k"));
	}	
}
